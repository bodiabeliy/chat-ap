{"version":3,"sources":["components/GeneralInfo.js","components/ChatList.js","App.js","reportWebVitals.js","index.js"],"names":["GeneralInfo","props","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","Button","Avatar","variant","Fab","onClick","history","goBack","position","aria-label","edge","messages","primary","secondary","person","BottomAppBar","CssBaseline","Paper","square","gutterBottom","component","length","List","map","ListSubheader","sx","bgcolor","ListItem","button","ListItemAvatar","alt","src","ListItemText","App","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","useState","splash","setSplash","Close","classes","AppBar","Toolbar","color","to","Image","style","display","width","exact","path","General","ChatList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f54c7f29.chunk.js","sourcesContent":["import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ReplyAllIcon from '@material-ui/icons/ReplyAll';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\nexport default function GeneralInfo(props) {\r\n\r\n  return (\r\n    <div className='expandPanel'>\r\n      <div className=\"expandPanel__drawer\">\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography >\r\n          Hey! Thank for jumping on the project. So for today we need to finish the Shareholders\r\n          Document Analysis. I have left all the key points to consider in the tasks tab. \r\n          There are just two crucial.\r\n          <Link>read more</Link>\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n            sit amet blandit leo lobortis eget.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <div className=\"expandPanel__section\">\r\n       <Button \r\n         className='expandPanel__Btn'\r\n       >\r\n       <Avatar className='addBtn__avatar' variant=\"rounded\">\r\n         <AddIcon />\r\n       </Avatar>\r\n         Create a DELIVERABLE\r\n       </Button>\r\n       \r\n      </div>\r\n        <Fab\r\n          onClick={()=> props.history.goBack()} // возврат на предыдущую страницу\r\n          className='expendpanel__btn'\r\n          position=\"fixed\"\r\n          aria-label=\"add\"\r\n          >\r\n          <ReplyAllIcon edge=\"end\"/>\r\n        </Fab>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst messages = [\r\n  {\r\n    id: 1,\r\n    primary: 'Anna Petrenko',\r\n    secondary: \"Hey! What about deadline?\",\r\n    person: './images/Anna.jpg',\r\n  },\r\n  {\r\n    id: 2,\r\n    primary: 'Nick Konstantinov',\r\n    secondary: `Hey! Thank for jumping on the project. So for today we need to finish the Shareholders \r\n    Document Analysis. I have left all the key points to consider in the tasks tab.\r\n    There are just two crucial points to consider..`,\r\n    person: './images/Mihael.jpg',\r\n  },\r\n  {\r\n    id: 3,\r\n    primary: 'Anna Petrenko',\r\n    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\r\n    person: './images/Mary.jpg',\r\n  },\r\n  {\r\n    id: 4,\r\n    primary: 'Mary Salen',\r\n    secondary: 'I have the tickets to the ReactConf for this year.',\r\n    person: '/static/images/avatar/3.jpg',\r\n  },\r\n  {\r\n    id: 5,\r\n    primary: \"Mihael Shamon\",\r\n    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\r\n    person: './images/Mihael.jpg',\r\n  },  {\r\n    id: 6,\r\n    primary: 'Anna Petrenko',\r\n    secondary: \"Hey! What about deadline?\",\r\n    person: './images/Anna.jpg',\r\n  },\r\n  {\r\n    id: 7,\r\n    primary: 'Nick Konstantinov',\r\n    secondary: `Hey! Thank for jumping on the project. So for today we need to finish the Shareholders \r\n    Document Analysis. I have left all the key points to consider in the tasks tab.\r\n    There are just two crucial points to consider..`,\r\n    person: './images/Mihael.jpg',\r\n  },\r\n  {\r\n    id: 8,\r\n    primary: 'Anna Petrenko',\r\n    secondary: 'I am try out this new BBQ recipe, I think this might be amazing',\r\n    person: './images/Mary.jpg',\r\n  },\r\n  {\r\n    id: 9,\r\n    primary: 'Mary Salen',\r\n    secondary: 'I have the tickets to the ReactConf for this year.',\r\n    person: '/static/images/avatar/3.jpg',\r\n  },\r\n  {\r\n    id: 10,\r\n    primary: \"Mihael Shamon\",\r\n    secondary: 'My appointment for the doctor was rescheduled for next Saturday.',\r\n    person: './images/Mihael.jpg',\r\n  }\r\n];\r\n\r\n\r\n\r\nexport default function BottomAppBar() {\r\n\r\n\r\n  return (\r\n    <div className='commentList'>\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper square>\r\n        <Typography className='listContainer' variant=\"h5\" gutterBottom component=\"div\">\r\n         <b> Comments {messages.length}</b>\r\n        </Typography>\r\n        <List>\r\n          {messages.map(({ id, primary, secondary, person }) => (\r\n            <React.Fragment key={id}>\r\n              {id === 1 && (\r\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\r\n                  Today\r\n                </ListSubheader>\r\n              )}\r\n\r\n              {id === 3 && (\r\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\r\n                  Yesterday\r\n                </ListSubheader>\r\n              )}\r\n\r\n              {id === 5 && (\r\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\r\n                  12.09.2020\r\n                </ListSubheader>\r\n              )}\r\n              {id === 7 && (\r\n                <ListSubheader sx={{ bgcolor: 'background.paper' }}>\r\n                  11.09.2020\r\n                </ListSubheader>\r\n              )}\r\n\r\n              <ListItem button>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Profile Picture\" variant=\"rounded\" src={person} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={primary} secondary={secondary} />\r\n              </ListItem>\r\n            </React.Fragment>\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    </React.Fragment>\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react';\nimport './App.scss';\nimport { BrowserRouter, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport General from './components/GeneralInfo'\nimport ChatList from './components/ChatList'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n\nimport Image from 'react-bootstrap/Image'\n\nfunction App() {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n  }));\n  // состояние отображения заставки (сплэш-скрин)\n const [splash, setSplash] = useState(true)\n\n  const Close = () => {\n    setSplash(false);\n  };\n  const classes = useStyles()\n  return (\n    <BrowserRouter>\n     <div className=\"chatApp\">\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar className=\"chatApp__navigation\" variant=\"dense\">\n              <Typography variant=\"h6\" color=\"inherit\">\n              <Link onClick={Close} className='navigarion__link link' to='/generalinfo'>Notes</Link>\n              <Link onClick={Close} className='navigarion__link link' to='/chatlist'>ChatList</Link>\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          {splash === true ? \n            <Image style={{display:'block'}} src='./images/splash.png' width='100%'></Image> :\n            <Image style={{display:'none'}} src='./images/splash.png' width='100%'></Image> \n          }\n        </div>\n          <Switch >\n            <Route exact path='/generalinfo' component={General}></Route>\n            <Route exact path='/chatlist' component={ChatList}></Route>\n            <Redirect to='/'></Redirect>\n          </Switch>\n     </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}